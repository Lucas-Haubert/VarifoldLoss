loss/dilate/dilate_loss.py:21: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  Omega =  soft_dtw.pairwise_distances(torch.range(1,N_output).view(N_output,1)).to(device)
outputs:
tensor([[[ 0.7833,  0.8104,  1.3169],
         [ 1.2149, -0.2114, -0.5344],
         [ 0.0352, -0.5896, -1.5247],
         [-0.4021,  0.2365, -0.2837],
         [ 0.7393,  0.7043,  0.4833],
         [-2.3859,  1.8825, -0.0346],
         [-2.2793, -0.2989, -0.5295],
         [ 1.8235,  0.0859,  0.4861],
         [-1.0588, -1.0788, -0.7491],
         [ 1.1132, -1.3959, -0.5164]],

        [[-1.1169, -1.5779,  0.0847],
         [-1.1282,  0.0265,  0.1580],
         [ 0.8929, -0.0523,  1.2147],
         [ 1.1177, -0.4819,  0.8423],
         [ 1.7369, -1.5278,  0.7616],
         [-0.2591,  2.6394,  1.0000],
         [-0.1845, -0.6286,  0.3698],
         [ 1.5035,  1.6086, -0.1680],
         [-0.9473,  1.3228,  0.3808],
         [-0.0213,  0.8326,  1.7264]]])

targets
tensor([[[ 3.1610e+00,  7.2879e-02,  9.1344e-01],
         [-5.1378e-02,  4.3887e-01,  1.6954e+00],
         [-3.4163e-01,  3.1038e+00,  2.5645e-02],
         [ 2.2731e-01, -1.3999e+00, -1.1035e+00],
         [-4.1636e-01,  6.4954e-04,  5.3113e-01],
         [ 3.1623e-01,  1.1062e+00, -7.8170e-01],
         [ 2.0514e-01,  9.8617e-01, -6.5851e-01],
         [ 8.1036e-01, -7.7565e-01,  1.7151e+00],
         [ 3.9599e-01,  2.8281e-01, -6.5562e-01],
         [-8.8397e-01, -1.0856e+00,  8.5290e-01]],

        [[-1.2608e+00, -9.1386e-01, -4.2161e-01],
         [-1.7623e+00,  7.7926e-01, -6.9657e-01],
         [ 3.1235e-01, -7.3572e-01,  9.7282e-01],
         [-7.8512e-01,  1.2468e+00, -1.8268e-01],
         [ 6.5641e-01,  9.0239e-01, -1.5911e+00],
         [-9.4422e-01, -4.3663e-01, -2.7858e-01],
         [ 6.3902e-01,  1.8006e+00, -1.9618e+00],
         [ 1.8395e-01, -2.1239e-01, -2.3406e-02],
         [ 4.7900e-01,  2.0070e+00,  1.1446e+00],
         [ 1.8645e+00, -6.9157e-01,  8.0749e-01]]])

DILATE_multi_dim_naive(outputs, targets) with alpha = 0.5  and gamma = 0.5
Loss naive: 4.500481764475505
Duration naive: 8.289640665054321 seconds

dilate_loss(outputs, targets) with alpha = 0.5  and gamma = 0.5
Loss dilate original: (tensor(21.3345, device='cuda:0'), tensor(42.5192, device='cuda:0'), tensor(0.1499, device='cuda:0'))
Duration dilate original: 0.002093076705932617 seconds
